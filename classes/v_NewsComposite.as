package classes{	import flash.events.*;	import flash.display.*;	import caurina.transitions.Tweener;	import classes.*;	import classes.dataModels.*;	import classes.interfaces.*;	import classes.baseElements.*;		public class v_NewsComposite extends ICompositeView	{		private var no:uint;		private var target:Sprite;		private var subMenu:Array;		private var subMenuC:Array;		private var subMenuMC:Array;		private var type:String;				private var h:uint;		public function v_NewsComposite(aModel:IWebModel, aController:c_MenuBrowse, target:Sprite, type:String, n:uint ) {			super(aModel, aController);			this.type = type;						this.no = n;			this.target = target;			makeMenu();		}		public function makeMenu():void {			var mArray:Array = (model as m_MenuData).getMenu('news', 1, 0);			subMenu		= new Array();			subMenuC	= new Array();			subMenuMC	= new Array();			h = 0;			for(var i = 0; i<1; i++){				var me:IComponentView = new v_NewsElement(model as m_MenuData);				(me as v_NewsElement).setConstants(					type,					mArray[i].getTitle(),					mArray[i].getDesc(),					mArray[i].getDate(),					mArray[i].getColorT(),					mArray[i].getColorD()				);				h += (me as v_NewsElement).height;				var s:Sprite = new Sprite();				s.x = 0;				s.y = h;				var m:Sprite = new Sprite();				var a:Sprite = new Sprite();				s.addChild(m);				s.addChild(a);				a.mask = m;				s.x = -100;				subMenuMC[i] = null;				subMenuC[i] = s;				subMenu[i] = a;				m.graphics.beginFill(0xFF00000);				m.graphics.drawRect(0, 0, a.width, a.height);				a.y = -a.height;				add(me);				target.addChild(s);				target.addChild(me);			}		}		public function updateView():uint{			var d:md_MenuComposite = (model as m_MenuData).getBrowseState(type);			var i:int;			var gap:uint = 0;						for(i=0; i < subMenuMC.length; i++)			{				if(subMenuMC[i] != null)					moveChild(i, gap, subMenuMC.length);				if(no == d.getNo0() && i == d.getNo1() && d.getLevel() >= 1)				{					if(subMenuMC[i] != null){						openSub(i, subMenuMC.length);						gap += subMenuMC[i].getHeight();					}				}else{					if(subMenuMC[i] != null)						closeSub(i, subMenuMC.length);				}			}			return gap;		}				public function moveChild(no:uint, gap:uint, total:uint):void{			var newy:int = (aChildren[no] as v_NewsElement).height * (aChildren[no] as v_NewsElement).getNo() + gap;			Tweener.addTween(aChildren[no], {y:newy, time:1/total, transition:"linear"});			Tweener.addTween(subMenuC[no], {y:newy + (aChildren[no] as v_NewsElement).height, time:1/total, transition:"linear"});		}						public function openSub(no:uint, total:uint):void{			Tweener.addTween(subMenu[no], {y:0, time:1/total, transition:"linear"});		}		public function closeSub(no:uint, total:uint):void{			Tweener.addTween(subMenu[no], {y:-subMenuMC[no].getHeight(), time:1/total, transition:"linear"});		}				public function getHeight():uint{			return h;		}	}}